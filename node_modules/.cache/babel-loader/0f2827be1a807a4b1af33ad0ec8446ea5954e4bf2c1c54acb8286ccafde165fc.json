{"ast":null,"code":"var _jsxFileName = \"/Users/seongjin/Desktop/oliver/programming/DreamCoding/project/react/react-clone-crd/src/component/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddTodo from \"./AddTodo/AddTodo\";\nimport Todo from \"./Todo/Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: '123',\n    text: '장보기',\n    status: 'active'\n  }, {\n    id: '1234',\n    text: '공부하기',\n    status: 'active'\n  }]);\n  const handleAdd = todo => setTodos([...todos, todo]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(item =>\n      /*#__PURE__*/\n      // <li key={item.id}>{item.text}</li>\n      _jsxDEV(Todo, {\n        todo: item,\n        onUpdate: handleUpdate,\n        onDelete: handleDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n_s(TodoList, \"T4U+JKM0iVJZW77gVnHuICelQts=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","AddTodo","Todo","TodoList","todos","setTodos","id","text","status","handleAdd","todo","map","item","handleUpdate","handleDelete"],"sources":["/Users/seongjin/Desktop/oliver/programming/DreamCoding/project/react/react-clone-crd/src/component/TodoList.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport AddTodo from \"./AddTodo/AddTodo\";\nimport Todo from \"./Todo/Todo\";\n\nexport default function TodoList() {\n    const [todos, setTodos] = useState([\n        {id: '123', text: '장보기', status: 'active'},\n        {id: '1234', text: '공부하기', status: 'active'},\n    ]);\n    const handleAdd = (todo) => setTodos([...todos, todo])\n    return <section>\n        <ul>\n            {\n                todos.map((item) => (\n                    // <li key={item.id}>{item.text}</li>\n                  <Todo key={item.id}\n                        todo={item}\n                        onUpdate={handleUpdate}\n                        onDelete={handleDelete}/>\n                ))}\n        </ul>\n        <AddTodo onAdd={handleAdd}/>\n    </section>\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,aAAa;AAAC;AAE/B,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC/B;IAACM,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAQ,CAAC,EAC1C;IAACF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAQ,CAAC,CAC/C,CAAC;EACF,MAAMC,SAAS,GAAIC,IAAI,IAAKL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,IAAI,CAAC,CAAC;EACtD,oBAAO;IAAA,wBACH;MAAA,UAEQN,KAAK,CAACO,GAAG,CAAEC,IAAI;MAAA;MACX;MACF,QAAC,IAAI;QACC,IAAI,EAAEA,IAAK;QACX,QAAQ,EAAEC,YAAa;QACvB,QAAQ,EAAEC;MAAa,GAHlBF,IAAI,CAACN,EAAE;QAAA;QAAA;QAAA;MAAA,QAInB;IAAC;MAAA;MAAA;MAAA;IAAA,QACL,eACL,QAAC,OAAO;MAAC,KAAK,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AACd;AAAC,GAnBuBN,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}