{"ast":null,"code":"var _jsxFileName = \"/Users/seongjin/Desktop/oliver/programming/DreamCoding/project/react/react-clone-crd/src/component/TodoList/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AddTodo from \"../AddTodo/AddTodo\";\nimport Todo from \"../Todo/Todo\";\nimport styles from \"./TodoList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList(_ref) {\n  _s();\n  let {\n    filter\n  } = _ref;\n  const [todos, setTodos] = useState(readTodosFromLocalStorage());\n  const handleAdd = todo => setTodos([...todos, todo]);\n  const handleUpdate = updated => setTodos(todos.map(t => t.id === updated.id ? updated : t));\n  const handleDelete = deleted => setTodos(todos.filter(t => t.id !== deleted.id));\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const filtered = getFilteredItems(todos, filter);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: filtered.map(item =>\n      /*#__PURE__*/\n      // <li key={item.id}>{item.text}</li>\n      _jsxDEV(Todo, {\n        todo: item,\n        onUpdate: handleUpdate,\n        onDelete: handleDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n_s(TodoList, \"qolc6dErSSpt8cX8v/nMr56ij+M=\");\n_c = TodoList;\nfunction readTodosFromLocalStorage() {\n  // console.log('readTodosFromLocalStorage');\n  const todos = localStorage.getItem('todos');\n  return todos ? JSON.parse(todos) : [];\n}\nfunction getFilteredItems(todos, filter) {\n  if (filter === 'all') {\n    return todos;\n  }\n  return todos.filter(todo => todo.status === filter);\n}\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","AddTodo","Todo","styles","TodoList","filter","todos","setTodos","readTodosFromLocalStorage","handleAdd","todo","handleUpdate","updated","map","t","id","handleDelete","deleted","localStorage","setItem","JSON","stringify","filtered","getFilteredItems","container","list","item","getItem","parse","status"],"sources":["/Users/seongjin/Desktop/oliver/programming/DreamCoding/project/react/react-clone-crd/src/component/TodoList/TodoList.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport AddTodo from \"../AddTodo/AddTodo\";\nimport Todo from \"../Todo/Todo\";\nimport styles from \"./TodoList.module.css\";\n\nexport default function TodoList({filter}) {\n  const [todos, setTodos] = useState(readTodosFromLocalStorage());\n  const handleAdd = (todo) => setTodos([...todos, todo]);\n  const handleUpdate = (updated) =>\n    setTodos(todos.map(t => t.id === updated.id ? updated : t));\n  const handleDelete = (deleted) =>\n    setTodos(todos.filter(t => t.id !== deleted.id));\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const filtered = getFilteredItems(todos, filter);\n  return <section className={styles.container}>\n    <ul className={styles.list}>\n      {\n        filtered.map((item) => (\n          // <li key={item.id}>{item.text}</li>\n          <Todo key={item.id}\n                todo={item}\n                onUpdate={handleUpdate}\n                onDelete={handleDelete}/>\n        ))}\n    </ul>\n    <AddTodo onAdd={handleAdd}/>\n  </section>\n}\n\nfunction readTodosFromLocalStorage() {\n  // console.log('readTodosFromLocalStorage');\n  const todos = localStorage.getItem('todos');\n  return todos ? JSON.parse(todos) : [];\n}\n\nfunction getFilteredItems(todos, filter) {\n  if (filter === 'all') {\n    return todos;\n  }\n  return todos.filter(todo => todo.status === filter);\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,uBAAuB;AAAC;AAE3C,eAAe,SAASC,QAAQ,OAAW;EAAA;EAAA,IAAV;IAACC;EAAM,CAAC;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,yBAAyB,EAAE,CAAC;EAC/D,MAAMC,SAAS,GAAIC,IAAI,IAAKH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,IAAI,CAAC,CAAC;EACtD,MAAMC,YAAY,GAAIC,OAAO,IAC3BL,QAAQ,CAACD,KAAK,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,GAAGH,OAAO,GAAGE,CAAC,CAAC,CAAC;EAC7D,MAAME,YAAY,GAAIC,OAAO,IAC3BV,QAAQ,CAACD,KAAK,CAACD,MAAM,CAACS,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC,CAAC;EAElDhB,SAAS,CAAC,MAAM;IACdmB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,MAAMgB,QAAQ,GAAGC,gBAAgB,CAACjB,KAAK,EAAED,MAAM,CAAC;EAChD,oBAAO;IAAS,SAAS,EAAEF,MAAM,CAACqB,SAAU;IAAA,wBAC1C;MAAI,SAAS,EAAErB,MAAM,CAACsB,IAAK;MAAA,UAEvBH,QAAQ,CAACT,GAAG,CAAEa,IAAI;MAAA;MAChB;MACA,QAAC,IAAI;QACC,IAAI,EAAEA,IAAK;QACX,QAAQ,EAAEf,YAAa;QACvB,QAAQ,EAAEK;MAAa,GAHlBU,IAAI,CAACX,EAAE;QAAA;QAAA;QAAA;MAAA,QAInB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL,QAAC,OAAO;MAAC,KAAK,EAAEN;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AACZ;AAAC,GAzBuBL,QAAQ;AAAA,KAARA,QAAQ;AA2BhC,SAASI,yBAAyB,GAAG;EACnC;EACA,MAAMF,KAAK,GAAGY,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOrB,KAAK,GAAGc,IAAI,CAACQ,KAAK,CAACtB,KAAK,CAAC,GAAG,EAAE;AACvC;AAEA,SAASiB,gBAAgB,CAACjB,KAAK,EAAED,MAAM,EAAE;EACvC,IAAIA,MAAM,KAAK,KAAK,EAAE;IACpB,OAAOC,KAAK;EACd;EACA,OAAOA,KAAK,CAACD,MAAM,CAACK,IAAI,IAAIA,IAAI,CAACmB,MAAM,KAAKxB,MAAM,CAAC;AACrD;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}